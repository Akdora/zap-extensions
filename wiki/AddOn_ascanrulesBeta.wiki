= Active scanner rules (beta) =

The beta quality Active Scanner rules.

The rules include:
  * Anti CSRF tokens scanner
  * Session Fixation
  * LDAP Injection
  * SQL Injection
  * SQL Injection (MySQL)
  * SQL Injection (Hypersonic SQL)
  * SQL Injection (Oracle)
  * SQL Injection (PostgreSQL)
  * HTTP Parameter Pollution scanner
  * Possible Username Enumeration

= SQL Injection =
This scanner scans for SQL Injection vulnerabilities in an RDBMS-independent fashion, by attacking url parameters and form parameters with fragments of valid and invalid SQL syntax, using error based, boolean based, Union based, and stacked query SQL Injection techniques.  This scanner may be able to fingerprint the RDBMS if the application throws a known RDBMS specific SQL error message.  This scanner does not exploit any RDBMS specific techniques, and so is the best SQL injection scanner to use as a starting point.

= SQL Injection (Hypersonic SQL) = 
This scanner uses Hypersonic-specific SQL syntax to attempt to induce time delays in the SQL statement called by the page.  If the unmodified query is not affected by a time delay, and the modified query's delay can be controlled, it is indicative of a time-based SQL Injection vulnerability in a Hypersonic SQL database.  This scanner is time sensitive, and should only be used in an attempt find find stubborn and un-obvious SQL injection vulnerabilities in a suspected Hypersonic database.  For this reason, the number of active scan threads should be set to the minimum when using this scanner, to minimise load on the web server, application server, and database, in order to avoid false positives caused by load delays rather than by SQL injection delays.  The scanner tests only for time-based SQL injection vulnerabilities.

= SQL Injection (Oracle) = 

Similar to the Hypersonic scanner, but specific to the Oracle RDBMS and SQL syntax.

= SQL Injection (PostgreSQL) = 

Similar to the Hypersonic scanner, but specific to the PostgreSQL RDBMS and SQL syntax.

= SQL Injection (MySQL) = 
Similar to the Hypersonic scanner, but specific to the MySQL RDBMS and SQL syntax.