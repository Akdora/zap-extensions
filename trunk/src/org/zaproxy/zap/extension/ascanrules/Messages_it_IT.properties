#X-Generator: crowdin.net
# This file defines the default (English) variants of all of the internationalised messages

ascanrules.rxss.name=Cross Site Scripting (riflesso)

ascanrules.sqlinjection.name=SQL Injection
ascanrules.sqlinjection.desc=SQL injection potrebbe essere possibile
ascanrules.sqlinjection.soln=Non fidarti dell'input utente anche se viene effettuata la validazione client side. In linea generale,\nControlla il tipo di tutti i dati lato server.\nSe l'applicazione utilizza JDBC, usa PreparedStatement o CallableStatement con parametri passati via '?'\nSe l'applicazione utilizza ASP, usa gli Oggetti ADO Command con controllo tipizzato e query parametrizzate.\nSe lato database possono essere utilizzate Stored Procedures, utilizzale. NON concatenare stringhe in query nelle stored procedure, o utilizzare 'exece', 'exec immediate', o istruzioni equivalenti\!\nNon creare query SQL dinamiche utilizzando la semplice concatenazione delle stringhe.\nSanitizza tutti i dati ricevuti dal client.\nAdotta una 'whitelist' di caratteri permessi, o una 'blacklist' di caratteri non consentiti nell'input utente.\nAdotta il principio del privilegio minimo utilizzando l'utente del database con il minor numero di privilegi possibili.In particolare, evitare di utilizzare il 'sa' o gli utenti 'db-owner'. Questo non eliminer\u00e0 eventuali SQL injection, ma ridurr\u00e0 al minimo il suo impatto.\nConcedi al database l'accesso minimo necessario all'applicazione.
ascanrules.sqlinjection.refs=https\://www.owasp.org/index.php/Top_10_2010-A1\nhttps\://www.owasp.org/index.php/SQL_Injection_Prevention_Cheat_Sheet
ascanrules.sqlinjection.alert.errorbased.attack=[{0}] campo\: [{1}], valore [{2}]
ascanrules.sqlinjection.alert.errorbased.differentiation.attack=Valore originale\: [{0}]. valore modificato\: [{1}]. valore di controllo\: [{2}]
ascanrules.sqlinjection.alert.booleanbased.attack=[{0}] campo\: [{1}], valore [{2}]
ascanrules.sqlinjection.alert.unionbased.attack=[{0}] campo\: [{1}], valore [{2}]
ascanrules.sqlinjection.alert.errorbased.extrainfo=RDBMS [{0}] probabile, dato il frammento di messaggio di errore [{1}] nei risultati HTML
ascanrules.sqlinjection.alert.unionbased.extrainfo=RDBMS [{0}] probabile, dato il frammento di messaggio specifico dell'Unione [{1}] in HTML risultati
ascanrules.sqlinjection.alert.errorbased.httpstatuscode.extrainfo=Messaggio non modificato ha dato il codice di stato HTTP [{0}], il messaggio modificato ha dato lo stato HTTP [{1}]
ascanrules.sqlinjection.alert.errorbased.differentiation.extrainfo=Messaggio non modificato ha dato il codice di stato HTTP [{0}], corpo di lunghezza [{1}], il messaggio modificato ha dato lo stato HTTP [{2}], corpo di lunghezza [{3}]. Un terzo (valore inducente una non-SQL injection) ha dato lo stato HTTP [{4}], corpo di lunghezza [{5}]
ascanrules.sqlinjection.alert.booleanbased.extrainfo=I risultati di pagina sono stati manipolati con successo usando le condizioni booleane [{0}] e [{1}]
ascanrules.sqlinjection.alert.timebased.extrainfo=Il tempo di query \u00e8 controllabile tramite il valore del parametro [{0}], che ha causato l'impiego di [{1}] millisecondi per la richiesta, quando la query originale non modificata con valore [{2}] ha impiegato [{3}] millisecondi 

