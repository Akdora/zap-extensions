#X-Generator: crowdin.net
# This file defines the default (English) variants of all of the internationalised messages

ascanrules.rxss.name=Cross Site Scripting (Traduit)

ascanrules.sqlinjection.name=Injection SQL
ascanrules.sqlinjection.desc=Une injection SQL peut \u00eatre possible
ascanrules.sqlinjection.soln=Ne faites pas confiance aux entr\u00e9es du c\u00f4t\u00e9 client, m\u00eame si des m\u00e9canismes de validation du c\u00f4t\u00e9 client sont en place. En g\u00e9n\u00e9ral, contr\u00f4lez chaque type de donn\u00e9es du c\u00f4t\u00e9 serveur.\nSi l'application utilise JDBC, utilisez les m\u00e9thodes PreparedStatement ou CallableStatement, avec les param\u00e8tres pass\u00e9s par '?'\nSi l'application utilise ASP, utilisez les Command Objects ADO avec un typage fort et des requ\u00eates param\u00e9tr\u00e9es.\nSi l'utilisation de Proc\u00e9dure Stock\u00e9es est possible, utilisez-les. Ne concat\u00e9nez *pas* les cha\u00eenes de caract\u00e8res dans les requ\u00eates \u00e0 l'int\u00e9rieur des proc\u00e9dures stock\u00e9es, ou utilisez des fonctions 'exec', 'exec immediate' ou \u00e9quivalent\!\nNe cr\u00e9ez pas du requ\u00eates SQL dynamique utilisant de simples concat\u00e9nations de cha\u00eenes de caract\u00e8res.\n\u00c9chappez toutes donn\u00e9es re\u00e7ues du client.\nAppliquez une 'liste blanche' de chaque caract\u00e8re autoris\u00e9, ou une 'liste noir' des caract\u00e8res interdits dans une entr\u00e9e de l'utilisateur.\nAppliquez le principe de moindre privil\u00e8ge en utilisant les privil\u00e8ges utilisateur minimaux sur la base de donn\u00e9e. En particulier, \u00e9vitez l'utilisation des utilisateurs 'sa' ou 'db-owner'.\nCeci n'\u00e9limine pas les injections SQL, mais minimise son impact.\nAccorder le minimum d'acc\u00e8s base de donn\u00e9e qu'il est n\u00e9cessaire pour l'application.
ascanrules.sqlinjection.refs=https\://www.owasp.org/index.php/Top_10_2010-A1\nhttps\://www.owasp.org/index.php/SQL_Injection_Prevention_Cheat_Sheet
ascanrules.sqlinjection.alert.errorbased.attack=[{0}] champ\: [{1}], valeur [{2}]
ascanrules.sqlinjection.alert.errorbased.differentiation.attack=Valeur d'Origine\: [{0}]. Valeur Modifi\u00e9e\: [{1}]. Valeur de Contr\u00f4le\: [{2}]
ascanrules.sqlinjection.alert.booleanbased.attack=[{0}] champ\: [{1}], valeur [{2}]
ascanrules.sqlinjection.alert.unionbased.attack=[{0}] champ\: [{1}], valeur [{2}]
ascanrules.sqlinjection.alert.errorbased.extrainfo=SGBDR [{0}] probable, compte tenu du fragment de message d'erreur [{1}] dans les r\u00e9sultats HTML
ascanrules.sqlinjection.alert.unionbased.extrainfo=SGBDR [{0}] probable, compte tenu du fragment de message sp\u00e9cifique \u00e0 l'UNION [{1}] dans les r\u00e9sultats HTML
ascanrules.sqlinjection.alert.errorbased.httpstatuscode.extrainfo=Le message non modifi\u00e9 donne le statut HTTP [{0}], le message modifi\u00e9 donne le statut HTTP [{1}]
ascanrules.sqlinjection.alert.errorbased.differentiation.extrainfo=Le message non modifi\u00e9 donne le statut HTTP [{0}], un corps d'une longueur [{1}], le message modifi\u00e9 donne le statut HTTP [{2}], un corps d'une longueur [{3}]. Un tiers (une injection non-SQL induisant une valeur) donne un statut HTTP [{4}], un corps d'une longueur [{5}]
ascanrules.sqlinjection.alert.booleanbased.extrainfo=Les r\u00e9sultats de la page ont \u00e9t\u00e9 manipul\u00e9s avec succ\u00e8s en utilisant les conditions bool\u00e9ennes [{0}] et [{1}]
ascanrules.sqlinjection.alert.timebased.extrainfo=Le temps de la requ\u00eate est contr\u00f4lable \u00e0 l'aide de la valeur du param\u00e8tre [{0}], qui lui fait ainsi prendre [{1}] millisecondes, alors que la requ\u00eate d'origine, non modifi\u00e9e avec la valeur [{2}] prend, quant \u00e0 elle, [{3}] millisecondes 

