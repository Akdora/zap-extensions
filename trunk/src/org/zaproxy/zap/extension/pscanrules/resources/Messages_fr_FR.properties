#X-Generator: crowdin.com
# This file defines the default (English) variants of all of the internationalised messages

pscanrules.desc=R\u00e8gles d'analyse passive

pscanrules.xss-protection.name=Protection XSS du navigateur Internet non activ\u00e9e
pscanrules.xss-protection.desc=La protection XSS du navigateur Internet n'est pas activ\u00e9e, ou est d\u00e9sactiv\u00e9e par la configuration de l'en-t\u00eate de r\u00e9ponse HTTP 'X-XSS-Protection' sur le serveur web
pscanrules.xss-protection.refs=https\://www.owasp.org/index.php/XSS_(Cross_Site_Scripting)_Prevention_Cheat_Sheet\nhttps\://blog.veracode.com/2014/03/guidelines-for-setting-security-headers/
pscanrules.xss-protection.extrainfo=L'en-t\u00eate de r\u00e9ponse HTTP X-XSS-Protection autorise le serveur internet \u00e0 activer ou d\u00e9sactiver le m\u00e9canisme de protection XSS du navigateur internet. Les valeurs suivantes tenteraient d'activer la protection\:\nX-XSS-Protection\: 1 ; mode \= block\nX-XSS-Protection\: 1 ; report \= http\://www.example.com/xss\nLes valeurs suivantes d\u00e9sactiveraient cette protection\:\nX-XSS-Protection\: 0\nL'en-t\u00eate de r\u00e9ponse HTTP de X-XSS-Protection est actuellement support\u00e9e par Internet Explorer, Chrome et Safari (WebKit). \nNotez que cette alerte n'est d\u00e9clench\u00e9e que si le corps de r\u00e9ponse pourraient contenir une charge utile XSS (avec un type de contenu texte, d'une longueur diff\u00e9rente de z\u00e9ro).
pscanrules.xss-protection.soln=Permettez que le filtre XSS du navigateur internet soit activ\u00e9, en renseignant l'en-t\u00eate de r\u00e9ponse HTTP X-XSS-Protection \u00e0 '1'.

pscanrules.xframeoptionsscanner.name=X-Frame-Options Header Not Set
pscanrules.xframeoptionsscanner.desc=X-Frame-Options header was not set for defense against 'ClickJacking' attacks.
pscanrules.xframeoptionsscanner.missing.desc=X-Frame-Options header is not included in the HTTP response to protect against 'ClickJacking' attacks.
pscanrules.xframeoptionsscanner.refs=http\://blogs.msdn.com/b/ieinternals/archive/2010/03/30/combating-clickjacking-with-x-frame-options.aspx
pscanrules.xframeoptionsscanner.soln=Most modern Web browsers support the X-Frame-Options HTTP header. Ensure it's set on all web pages returned by your site (if you expect the page to be framed only by pages on your server (e.g. it's part of a FRAMESET) then you'll want to use SAMEORIGIN, otherwise if you never expect the page to be framed, you should use DENY.  ALLOW-FROM allows specific websites to frame the web page in supported web browsers).

pscanrules.xcontenttypeoptionsscanner.name=X-Content-Type-Options Header Missing
pscanrules.xcontenttypeoptionsscanner.desc=The Anti-MIME-Sniffing header X-Content-Type-Options was not set to 'nosniff'. This allows older versions of Internet Explorer and Chrome to perform MIME-sniffing on the response body, potentially causing the response body to be interpreted and displayed as a content type other than the declared content type. Current (early 2014) and legacy versions of Firefox will use the declared content type (if one is set), rather than performing MIME-sniffing.
pscanrules.xcontenttypeoptionsscanner.otherinfo=This issue still applies to error type pages (401, 403, 500, etc) as those pages are often still affected by injection issues, in which case there is still concern for browsers sniffing pages away from their actual content type.
pscanrules.xcontenttypeoptionsscanner.refs=http\://msdn.microsoft.com/en-us/library/ie/gg622941%28v\=vs.85%29.aspx\nhttps\://www.owasp.org/index.php/List_of_useful_HTTP_headers
pscanrules.xcontenttypeoptionsscanner.soln=Ensure that the application/web server sets the Content-Type header appropriately, and that it sets the X-Content-Type-Options header to 'nosniff' for all web pages.\nIf possible, ensure that the end user uses a standards-compliant and modern web browser that does not perform MIME-sniffing at all, or that can be directed by the web application/web server to not perform MIME-sniffing.
