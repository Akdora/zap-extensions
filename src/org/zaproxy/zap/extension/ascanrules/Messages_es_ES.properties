#X-Generator: crowdin.net
# This file defines the default (English) variants of all of the internationalised messages

ascanrules.rxss.name=Secuencia de Comandos en Sitios Cruzados (XSS, reflejado)

ascanrules.sqlinjection.name=Falla por Inyecci\u00f3n SQL
ascanrules.sqlinjection.desc=Falla por Inyecci\u00f3n SQL puede ser posible
ascanrules.sqlinjection.soln=No conf\u00edes en datos de entrada provenientes del cliente, a\u00fan si los datos se validan del lado del cliente.  Como recomendaci\u00f3n general, valida todos los datos de entrada del lado del servidor. \nSi la aplicaci\u00f3n utiliza JDBC, utilice objetos 'PreparedStatement' o 'CallableStatement' con par\u00e1metros pasados  con '?'.\nSi la aplicaci\u00f3n utiliza ASP, utilice objetos de Comando ADO con verificaci\u00f3n fuerte de tipos de datos y consultas parametrizadas. \nSi se pueden utilizar procedimientos almacenados en base de datos, util\u00edzalos.  *NO* concatenes cadenas de caracteres en las consultas en el procedimiento almacenado, o utiliza 'exec', 'exec immediate' o alguna funcionalidad equivalente\! \nNo se deben crear consultas SQL din\u00e1micas mediante la concatenaci\u00f3n simple de cadenas.\nProcura escapar todos los datos recibidos del cliente. \nUtiliza una 'lista blanca' de caracteres permitidos o al menos una "lista negra" de caracteres no permitidos en la entrada del usuario.\nAplica el concepto de privilegio m\u00ednimo utilizando un usuario con el m\u00ednimo privilegio necesario para acceder la base de datos. En particular, evita utilizar los usuarios 'sa' o 'db-owner'. Esta medida no elimina ataques de injecci\u00f3n SQL pero reduce el impacto.
ascanrules.sqlinjection.refs=https\://www.OWASP.org/index.php/Top_10_2010-a1 https\://www.owasp.org/index.php/SQL_Injection_Prevention_Cheat_Sheet
ascanrules.sqlinjection.alert.errorbased.attack=[{0}] campo\: [{1}], valor [{2}]
ascanrules.sqlinjection.alert.errorbased.differentiation.attack=Valor Original\: [{0}]. Valor Modificado\: [{1}]. Valor de Control\: [{2}]
ascanrules.sqlinjection.alert.booleanbased.attack=[{0}] campo\: [{1}], valor [{2}]
ascanrules.sqlinjection.alert.unionbased.attack=[{0}] campo\: [{1}], valor [{2}]
ascanrules.sqlinjection.alert.errorbased.extrainfo=RDBMS [{0}] probable, dado fragmento del mensaje de error [{1}] en resultados HTML
ascanrules.sqlinjection.alert.unionbased.extrainfo=RDBMS [{0}] probable, dado fragmento [{1}] del mensaje tipo UNION en resultados HTML
ascanrules.sqlinjection.alert.errorbased.httpstatuscode.extrainfo=Mensaje no modificado retorn\u00f3 estado HTTP [{0}], mensaje modificado retorn\u00f3 estado HTTP [{1}]
ascanrules.sqlinjection.alert.errorbased.differentiation.extrainfo=Mensaje no modificado retorn\u00f3 estado HTTP [{0}] y longitud [{1}]; Mensaje modificado retorn\u00f3 estado HTTP [{2}] y longitud [{3}]. Un tercer mensaje (con valor sin inyecci\u00f3n SQL) retorn\u00f3 estado HTTP [{4}] y longitud [{5}]
ascanrules.sqlinjection.alert.booleanbased.extrainfo=Los resultados de la p\u00e1gina fueron manipulados con \u00e9xito usando las condiciones l\u00f3gicas [{0}] y [{1}]
ascanrules.sqlinjection.alert.timebased.extrainfo=El tiempo de consulta es controlable a trav\u00e9s del valor del par\u00e1metro [{0}], el cual caus\u00f3 que la solicitud tomara [{1}] milisegundos, mientras que la consulta original, no modificada, tom\u00f3 [{2}] [{3}] milisegundos 

