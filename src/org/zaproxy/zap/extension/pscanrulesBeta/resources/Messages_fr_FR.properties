#X-Generator: crowdin.com
# This file defines the default (English) variants of all of the internationalised messages

pscanbeta.desc=R\u00e8gles d'analyse passives - b\u00eata

pscanbeta.authenticationcredentialscaptured.name=Informations d'authentification captur\u00e9es
pscanbeta.authenticationcredentialscaptured.desc=Un m\u00e9canisme d'authentification non-s\u00e9curis\u00e9 est utilis\u00e9. Ceci permet \u00e0 un attaquant sur le r\u00e9seau d'acc\u00e9der au nom d'utilisateur ainsi qu'au mot de passe d'un utilisateur authentifi\u00e9. Avec de l'authentification de type Basic, l'attaquant doit simplement surveiller le trafique r\u00e9seau jusqu'\u00e0 ce qu'une requ\u00eate d'authentification basique soit re\u00e7ue, puis d\u00e9cod\u00e9 le nom d'utilisateur et le mot de passe encod\u00e9 en base64. Avec de l'authentification de type Digest, l'attaquant a acc\u00e8s au nom d'utilisateur, et probablement au mot de passe, si le hash (incluant la valeur \u00e0 usage unique) peut \u00eatre craqu\u00e9 avec succ\u00e8s, ou si une attaque de type Man-in-the-middle a \u00e9t\u00e9 mise en place.
pscanbeta.authenticationcredentialscaptured.soln=Utilisez HTTPS, et utilisez un m\u00e9canisme d'authentification s\u00e9curis\u00e9 qui ne transmette pas le nom d'utilisateur ou le mot de passe de mani\u00e8re non-encrypt\u00e9e. En particulier, \u00e9vitez l'utilisation de m\u00e9canisme basique d'authentification, \u00e9tant donn\u00e9 que ce m\u00e9canisme d'obfuscation trivial est facilement cassable.
pscanbeta.authenticationcredentialscaptured.refs=https\://www.owasp.org/index.php/Top_10_2010-A3\nhttps\://www.owasp.org/index.php/Testing_for_Brute_Force_%28OWASP-AT-004%29\nhttps\://www.owasp.org/index.php/Category\:Authentication_Vulnerability\nhttp\://en.wikipedia.org/wiki/Digest_access_authentication
pscanbeta.authenticationcredentialscaptured.alert.basicauth.extrainfo=[{0}] [{1}] utilise un m\u00e9canisme d''authentification vuln\u00e9rable [{2}], r\u00e9v\u00e9lant le nom d''utilisateur [{3}] et le mot de passe [{4}].
pscanbeta.authenticationcredentialscaptured.alert.digestauth.extrainfo=[{0}] [{1}] utilise un m\u00e9canisme d''authentification vuln\u00e9rable [{2}], r\u00e9v\u00e9lant le nom d''utilisateur [{3}] et des informations suppl\u00e9mentaires [{4}].
pscanbeta.authenticationcredentialscaptured.alert.attack=L'attaquant \u00e9coute le r\u00e9seau jusqu'\u00e0 la d\u00e9couverte d'une authentification r\u00e9ussie.

pscanbeta.charsetmismatch.name=Incompatibilit\u00e9 de charset
pscanbeta.charsetmismatch.desc=Cette v\u00e9rification identifie les r\u00e9ponses o\u00f9 l'en-t\u00eate HTTP Content-Type d\u00e9clare un jeu de caract\u00e8res diff\u00e9rent du jeu de caract\u00e8res d\u00e9fini par le corps de l'HTML ou XML. Lorsqu'il y a une incompatibilit\u00e9 de jeu de caract\u00e8res entre l'en-t\u00eate HTTP et le corps du contenu, les navigateurs internet peuvent \u00eatre pouss\u00e9s dans un mode d'\u00e9valuation ind\u00e9sirable afin de d\u00e9terminer le jeu de caract\u00e8res correct de ce contenu.
pscanbeta.charsetmismatch.soln=Forcer UTF-8 pour tous les contenus texte dans l'en-t\u00eate HTTP et dans les meta-balises, ou pour coder les d\u00e9clarations XML.
pscanbeta.charsetmismatch.exploit=Un attaquant pourrait manipuler le contenu de la page de telle sorte qu'il soit interpr\u00e9t\u00e9 dans un codage de leur choix. Par exemple, si un attaquant peut contr\u00f4ler le contenu au d\u00e9but de la page, il pourrait injecter un script \u00e0 l'aide de texte cod\u00e9 en UTF-7, et manipuler ainsi certains navigateurs afin qu'ils interpr\u00e8tent ce texte.
pscanbeta.charsetmismatch.refs=http\://code.google.com/p/browsersec/wiki/Part2\#Character_set_handling_and_detection
pscanbeta.charsetmismatch.extrainfo.html=Il y avait une incompatibilit\u00e9 de jeu de caract\u00e8res entre l''en-t\u00eate HTTP et le d\u00e9claration de codage HTML\: [{0}] et [{1}] ne correspondent pas.
pscanbeta.charsetmismatch.extrainfo.xml=Il y avait une incompatibilit\u00e9 de jeu de caract\u00e8res entre l''en-t\u00eate HTTP et le d\u00e9claration de codage XML\: [{0}] et [{1}] ne correspondent pas.

pscanbeta.cookielooselyscoped.name=Cookie faiblement coupl\u00e9
pscanbeta.cookielooselyscoped.desc=Les cookies peuvent \u00eatre limit\u00e9s par le domaine ou le chemin d'acc\u00e8s. Cette v\u00e9rification ne concerne que le p\u00e9rim\u00e8tre de domaine. Le p\u00e9rim\u00e8tre de domaine appliqu\u00e9 \u00e0 un cookie d\u00e9termine quels domaines peuvent acc\u00e9der \u00e0 ce cookie. Par exemple, un cookie peut \u00eatre limit\u00e9 strictement \u00e0 un sous-domaine, p.ex. www.nottrusted.com, ou faiblement limit\u00e9 \u00e0 un domaine parent, p.ex. nottrusted.com. Dans ce dernier cas, n'importe quel sous-domaine de nottrusted.com peut acc\u00e9der au cookie. Des cookies faiblement limit\u00e9s sont fr\u00e9quents dans les m\u00e9ga-applications, comme google.com et live.com.
pscanbeta.cookielooselyscoped.soln=Toujours limiter les cookies \u00e0 un FQDN (Fully Qualified Domain Name).
pscanbeta.cookielooselyscoped.exploit=Les cookies d\u00e9finis sur un sous-domaine comme app.foo.bar sont transmis uniquement \u00e0 ce domaine par le navigateur. Cependant, les cookies limit\u00e9s \u00e0 un domaine parent peuvent \u00eatre transmis au parent, ou \u00e0 n'importe quel sous-domaine du parent.
pscanbeta.cookielooselyscoped.refs=http\://code.google.com/p/browsersec/wiki/Part2\#Same-origin_policy_for_cookies
pscanbeta.cookielooselyscoped.extrainfo=Le domaine d''origine utilis\u00e9 pour la comparaison \u00e9tait \:\n{0}\n{1}
pscanbeta.cookielooselyscoped.extrainfo.cookie={0}\n\n

pscanbeta.insecureauthentication.name=M\u00e9thode d'Authentification Faible
pscanbeta.insecureauthentication.desc=Du HTTP basique ou de l'authentification simple a \u00e9t\u00e9 utilis\u00e9 sur une connexion non-s\u00e9curis\u00e9e. Les informations de s\u00e9curit\u00e9 ont pu \u00eatre lue et r\u00e9utilis\u00e9e par une personne ayant acc\u00e8s au r\u00e9seau.
pscanbeta.insecureauthentication.soln=Prot\u00e9gez la connexion en utilisant HTTPS ou utilisez un m\u00e9canisme d'authenfication plus fort
pscanbeta.insecureauthentication.refs=www.owasp.org/index.php/Category\:Authentication_Vulnerability

pscanbeta.insecurejsfviewstate.name=JSF ViewState non-s\u00e9curis\u00e9
pscanbeta.insecurejsfviewstate.desc=La r\u00e9ponse \u00e0 l'URL suivante contient une valeur ViewState qui n'a aucune protection cryptographique.
pscanbeta.insecurejsfviewstate.soln=S\u00e9curisez VIEWSTATE avec un MAC sp\u00e9cifique \u00e0 votre environnement
pscanbeta.insecurejsfviewstate.refs=https\://www.trustwave.com/spiderlabs/advisories/TWSL2010-001.txt
pscanbeta.insecurejsfviewstate.extrainfo=Le JSF ViewState [{0}] n''est pas s\u00e9curis\u00e9

pscanbeta.noanticsrftokens.name=Absence de Jetons Anti-CSRF
pscanbeta.noanticsrftokens.desc=Aucun jetons Anti-CSRF n'ont \u00e9t\u00e9 trouv\u00e9s dans un formulaire HTML.
pscanbeta.noanticsrftokens.alert.attack=Aucun. Avertissement uniquement.
pscanbeta.noanticsrftokens.alert.extrainfo=Aucun jetons Anti-CSRF connus {0} n''a \u00e9t\u00e9 trouv\u00e9 dans le formulaire HTML suivant\: {1}.  
