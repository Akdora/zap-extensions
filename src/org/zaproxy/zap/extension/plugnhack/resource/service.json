{
  "commands":[{
    "description":"OWASP ZAP Commands"
  },
  {
    "name": "session-new",
    "description": "create a new session",
    "returnType": "string",
    "params": [{
      "name": "name",
      "type": "string",
      "description": "the name of the new session to create"
    }],
    "execAction":{
      "url":"{{ROOT}}/JSON/core/action/newSession/?name=${$.args.name}",
      "expression":"$.Result"
    }
  },
  {
    "name":"zap-version",
    "description":"returns the ZAP version",
    "returnType":"string",
    "params":[],
    "execAction":{
      "url":"{{ROOT}}/JSON/core/view/version/",
      "expression":"$.version",
      "callbackData":{"result":{"type":"expression","expression":"$.response.version","extract":true}}
    }
  },
  {
    "name":"brk-all-requests",
    "description":"break on all new requests",
    "returnType":"string",
    "params": [{
      "name": "break",
      "type": "boolean",
      "description": "turn breaking on or off"
    }],
    "execAction":{
      "url":"{{ROOT}}/JSON/break/action/breakOnAllRequests/?break=${$.args.break}",
      "expression":"$.Result",
      "callbackData":{"result":{"type":"expression","expression":"$.response.Result","extract":true}}
    }
  },
  {
    "name":"brk-all-responses",
    "description":"break on all new responses",
    "returnType":"string",
    "params": [{
      "name": "break",
      "type": "boolean",
      "description": "turn breaking on or off"
    }],
    "execAction":{
      "url":"{{ROOT}}/JSON/break/action/breakOnAllResponses/?break=${$.args.break}",
      "expression":"$.Result",
      "callbackData":{"result":{"type":"expression","expression":"$.response.Result","extract":true}}
    }
  },
  {
    "name":"brk-on-tab",
    "description":"break just on this tab",
    "returnType":"string",
    "params":[
    {
      "name":"scope",
      "type": {"name":"selection", "data":["tab","global"]},
      "description": "scope",
      "defaultValue": "tab"
    },
    {
      "name":"state",
      "type": {"name":"selection", "data":["on","off"]},
      "description": "break on request",
      "defaultValue": "on"
    }],
    "execAction":{
      "url":"{{ROOT}}/JSON/break/action/breakOnId/?key=${$.tab.key}&state=${$.args.state}",
      "callbackData":{
        "conditionalCommands":{
          "expression":"$.args.scope",
          "states":{
            "on":[{
              "command":"addToHeader",
              "params": {
                "headerName":"X-Security-Proxy",
                "value":{
                          "type":"template",
                          "template":"key=${$.tab.key}"
                },
                "scope":{"type":"expression","expression":"$.args.scope","extract":true},
                "tab":{"type":"expression","expression":"$.tab.key","extract":true}
              }
            }],
            "off":[{
              "command":"removeFromHeader",
              "params": {
                "headerName":"X-Security-Proxy",
                "value":{
                          "type":"template",
                          "template":"key=${$.tab.key}"
                },
                "scope":{"type":"expression","expression":"$.args.scope","extract":true},
                "tab":{"type":"expression","expression":"$.tab.key","extract":true}
              }
            }]
          }
        }
      }
    }
  },
  {
    "name":"record",
    "description":"record all requests",
    "returnType":"string",
    "params":[
    {
      "name":"state",
      "type": {"name":"selection", "data":["on","off"]},
      "description": "record requests",
      "defaultValue": "on"
    },
    {
      "name":"scope",
      "type": {"name":"selection", "data":["tab","global"]},
      "description": "local to tab or global",
      "defaultValue": "tab"
    }
    ],
    "execAction":{
      "expression":"$.Result",
      "callbackData":{
        "conditionalCommands":{
          "expression":"$.args.state",
          "states":{
            "on":[{
              "command":"addToHeader",
              "params": {
                "headerName":"X-Security-Proxy",
                "value":"record",
                "scope":{"type":"expression","expression":"$.args.scope","extract":true}
              }
            }],
            "off":[{
              "command":"removeFromHeader",
              "params": {
                "headerName":"X-Security-Proxy",
                "value":"record",
                "scope":{"type":"expression","expression":"$.args.scope","extract":true}
              }
            }]
          }
        }
      }
    }
  },
  {
    "name":"scan",
    "description":"active scan a site",
    "returnType":"string",
    "params":[
    {
      "name":"site",
      "type": {
        "name":"selection",
        "dataAction":{
          "url":"{{ROOT}}/JSON/core/view/sites/",
          "expression":"$.sites[*]"
          }
        },
      "description":"the site to scan (attack)"
    }
    ],
    "execAction":{
      "url":"{{ROOT}}/JSON/ascan/action/scan/?url=${$.args.site}",
      "expression":"$.Result",
      "callbackData":{}
    }
  },
  {
    "name":"scan-status",
    "description":"Scan progress out of 100",
    "returnType":"string",
    "params":[],
    "execAction":{
      "url":"{{ROOT}}/JSON/ascan/view/status/",
      "expression":"$.Result",
      "callbackData":{},
      "expression":"$.status",
      "callbackData":{"result":{"type":"expression","expression":"$.response.status","extract":true}}
    }
  },
  {
    "name":"spider",
    "description":"spider a site",
    "returnType":"string",
    "params":[
    {
      "name":"site",
      "type": {
        "name":"selection",
        "dataAction":{
          "url":"{{ROOT}}/JSON/core/view/sites/",
          "expression":"$.sites[*]"
          }
        },
      "description":"the site to spider"
    }
    ],
    "execAction":{
      "url":"{{ROOT}}/JSON/spider/action/scan/?url=${$.args.site}",
      "expression":"$.Result",
      "callbackData":{}
    }
  },
  {
    "name":"spider-status",
    "description":"Spider progress out of 100",
    "returnType":"string",
    "params":[],
    "execAction":{
      "url":"{{ROOT}}/JSON/spider/view/status/",
      "expression":"$.Result",
      "callbackData":{},
      "expression":"$.status",
      "callbackData":{"result":{"type":"expression","expression":"$.response.status","extract":true}}
    }
  },
  {
    "name":"http-session-new",
    "description":"start a new HTTP session",
    "returnType":"string",
    "params":[
    {
      "name":"site",
      "type": {
        "name":"selection",
        "dataAction":{
          "url":"{{ROOT}}/JSON/core/view/sites/",
          "expression":"$.sites[*]"
          }
        },
      "description":"the site"
    },
    {
      "name": "name",
      "type": "string",
      "description": "the name of the new http session to create"
    }
    ],
    "execAction":{
      "url":"{{ROOT}}/JSON/httpSessions/action/createEmptySession/?site=${$.args.site}&session=${$.args.name}",
      "expression":"$.Result",
      "callbackData":{}
    }
  },
  {
    "name":"http-session-rename",
    "description":"rename an HTTP session",
    "returnType":"string",
    "params":[
    {
      "name":"site",
      "type": {
        "name":"selection",
        "dataAction":{
          "url":"{{ROOT}}/JSON/core/view/sites/",
          "expression":"$.sites[*]"
          }
        },
      "description":"the site"
    },
    {
      "name":"session",
      "type": {
        "name":"selection",
        "dataAction":{
          "url":"{{ROOT}}/JSON/httpSessions/view/sessions/?site=${$.args.site}&session=",
          "expression":"$.sessions.*.session.0"
          }
        },
      "description":"the session to rename"
    },
    {
      "name": "name",
      "type": "string",
      "description": "the new name for http session"
    }
    ],
    "execAction":{
      "url":"{{ROOT}}/JSON/httpSessions/action/renameSession/?site=${$.args.site}&oldSessionName=${$.args.session}&newSessionName=${$.args.name}",
      "expression":"$.Result",
      "callbackData":{}
    }
  },
  {
    "name":"http-session-switch",
    "description":"switch to another HTTP session",
    "returnType":"string",
    "params":[
    {
      "name":"site",
      "type": {
        "name":"selection",
        "dataAction":{
          "url":"{{ROOT}}/JSON/core/view/sites/",
          "expression":"$.sites[*]"
          }
        },
      "description":"the site"
    },
    {
      "name":"session",
      "type": {
        "name":"selection",
        "dataAction":{
          "url":"{{ROOT}}/JSON/httpSessions/view/sessions/?site=${$.args.site}&session=",
          "expression":"$.sessions.*.session.0"
          }
        },
      "description":"the session to use"
    }
    ],
    "execAction":{
      "url":"{{ROOT}}/JSON/httpSessions/action/setActiveSession/?site=${$.args.site}&session=${$.args.session}",
      "expression":"$.Result",
      "callbackData":{}
    }
  }
  ]
}
