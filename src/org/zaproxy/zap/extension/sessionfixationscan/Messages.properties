# This file defines the default (English) variants of all of the internationalised messages
sessionfixation.name=Session Fixation
sessionfixation.desc=Session Fixation may be possible. If this issue occurs with a login URL (where the user authenticates themselves to the application), then the url may be given by an attacker, along with a fixed session id, to a victim, in order to assume the identity of the victim. If the issue occurs with a non-login page, the url and fixed session id may be used by an attacker to track an unauthenticated user's actions. If the attack occurs on a cookie field or a form field (POST parameter) rather than on a url (GET) parameter, then some other vulnerability may also be required in order to set the cookie field on the victim's browser, to allow the vulnerability to be exploited.
sessionfixation.soln=1) Prevent the attacker from gaining a session id by enforcing strict session ids, and by only allocating session ids upon successful authentication to the application.\n 2) The server should always create a new session id upon authentication, regardless of whether a session is already in place.\n 3) Bind the session id to some identificable client attribute combination, such as IP address, SSL client certificate.\n 4) Sessions, when destroyed, must be destroyed on the server, as well as on the client.\n 5) Implement a logout mechanism which will destroy all previous sessions for the client.\n6) Implement absolute session timeouts.\n
sessionfixation.refs=The OWASP guide at https://www.owasp.org/index.php/Session_fixation\nhttp://www.acros.si/papers/session_fixation.pdf\nhttp://www.technicalinfo.net/papers/WebBasedSessionManagement.html
sessionfixation.alert.extrainfo=Cookie set in response when cookie field [{0}] is set to NULL: [{1}]\nCookie set in response with borrowed (valid) cookie value in request [{1}] : [{2}]
sessionfixation.alert.attack={0} field: {1}
sessionfixation.alert.logmessage=A likely Session Fixation Vulnerability has been found on url [{0}] on {1} field: {2}