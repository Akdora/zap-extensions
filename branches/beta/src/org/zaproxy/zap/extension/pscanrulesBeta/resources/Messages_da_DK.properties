#X-Generator: crowdin.com
# This file defines the default (English) variants of all of the internationalised messages

pscanbeta.desc=Passive Scan Rules - beta

pscanbeta.authenticationcredentialscaptured.name=Identifikationsoplysninger fundet
pscanbeta.authenticationcredentialscaptured.desc=En usikker idenfitikations mekanisme er i brug. Dette tillader en person med ondsindede hensiger p\u00e5 netv\u00e6rket at f\u00e5 adgang til bruger id og kodeord fra en bruger som er logged ind. N\u00e5r "Basic Authentication" er i brug kan denne person lytte til trafikken indtil en identifications pakke bliver sendt, og s\u00e5 kan denne pakke dekodes vha. Base64 hvori brugernavn og kodeord kan l\u00e6ses som normal tekst. N\u00e5r "Digest Authentication" er i brug, kan personen f\u00e5 adgang til brugernavnet og muligvis kodeordet, hvis "hash" og "salt" can crackes, eller hvis et Man-in-the-Middle angreb bliver foretaget.     
pscanbeta.authenticationcredentialscaptured.soln=Brug HTTPS, og brug en sikker identifikations mekanisme som ikke sender bruger id eller kodeord over en ukrypteret forbindelse. Undg\u00e5 at bruge "Basic Authentication" da denne identifikations mekanisme let kan dekrypteres. 
pscanbeta.authenticationcredentialscaptured.refs=https\://www.owasp.org/index.php/Top_10_2010-A3\nhttps\://www.owasp.org/index.php/Testing_for_Brute_Force_%28OWASP-AT-004%29\nhttps\://www.owasp.org/index.php/Category\:Authentication_Vulnerability\nhttp\://en.wikipedia.org/wiki/Digest_access_authentication
pscanbeta.authenticationcredentialscaptured.alert.basicauth.extrainfo=[{0}] [{1}] bruger en usikker identifikations metode [{2}], som viser brugernavn [{3}] og kodeord [{4}].
pscanbeta.authenticationcredentialscaptured.alert.digestauth.extrainfo=[{0}] [{1}] bruger en usikker identifikations metode [{2}], som viser brugernavn [{3}] og anden information [{4}].
pscanbeta.authenticationcredentialscaptured.alert.attack=En angribende person kan lytte med p\u00e5 netv\u00e6rket indtil identifikations er fuldf\u00f8rt.

pscanbeta.charsetmismatch.name=Charset Mismatch
pscanbeta.charsetmismatch.desc=This check identifies responses where the HTTP Content-Type header declares a charset different from the charset defined by the body of the HTML or XML. When there's a charset mismatch between the HTTP header and content body Web browsers can be forced into an undesirable content-sniffing mode to determine the content's correct character set.
pscanbeta.charsetmismatch.soln=Force UTF-8 for all text content in both the HTTP header and meta tags or encoding declarations in XML.
pscanbeta.charsetmismatch.exploit=An attacker could manipulate content on the page to be interpreted in an encoding of their choice. For example, if an attacker can control content at the beginning of the page, they could inject script using UTF-7 encoded text and manipulate some browsers into interpreting that text.
pscanbeta.charsetmismatch.refs=http\://code.google.com/p/browsersec/wiki/Part2\#Character_set_handling_and_detection
pscanbeta.charsetmismatch.extrainfo.html=There was a charset mismatch between the HTTP Header and the HTML encoding declaration\: [{0}] and [{1}] do not match.
pscanbeta.charsetmismatch.extrainfo.xml=There was a charset mismatch between the HTTP Header and the XML encoding declaration\: [{0}] and [{1}] do not match.

pscanbeta.cookielooselyscoped.name=Loosely Scoped Cookie
pscanbeta.cookielooselyscoped.desc=Cookies can be scoped by domain or path. This check is only concerned with domain scope.The domain scope applied to a cookie determines which domains can access it. For example, a cookie can be scoped strictly to a subdomain e.g. www.nottrusted.com, or loosely scoped to a parent domain e.g. nottrusted.com. In the latter case, any subdomain of nottrusted.com can access the cookie. Loosely scoped cookies are common in mega-applications like google.com and live.com.
pscanbeta.cookielooselyscoped.soln=Always scope cookies to a FQDN (Fully Qualified Domain Name).
pscanbeta.cookielooselyscoped.exploit=Cookies set from a subdomain like app.foo.bar are transmitted only to that domain by the browser. However, cookies scoped to a parent-level domain may be transmitted to the parent, or any subdomain of the parent.
pscanbeta.cookielooselyscoped.refs=http\://code.google.com/p/browsersec/wiki/Part2\#Same-origin_policy_for_cookies
pscanbeta.cookielooselyscoped.extrainfo=The origin domain used for comparison was\: \r\n{0}\r\n{1}
pscanbeta.cookielooselyscoped.extrainfo.cookie={0}\r\n

pscanbeta.insecureauthentication.name=D\u00e5rlig Identifikations Metode
pscanbeta.insecureauthentication.desc="HTTP Basic" eller "Digest Authentication" er brugt over en usikker forbindelse. Identifikationsoplysningerne kan l\u00e6ses og blive genbrugt af en som har adgang til netv\u00e6rket.
pscanbeta.insecureauthentication.soln=Beskyt forbindelse vha. HTTPS eller brug en st\u00e6rkere identifikations mekanisme
pscanbeta.insecureauthentication.refs=www.owasp.org/index.php/Category\:Authentication_Vulnerability

pscanbeta.insecurejsfviewstate.name=Usikker JSF ViewState
pscanbeta.insecurejsfviewstate.desc=Svaret fra f\u00f8lgende URL indeholder en ViewState v\u00e6rdi som ikke har nogen kryptografisk beskyttelse.
pscanbeta.insecurejsfviewstate.soln=Sikker ViewState med en MAC som er specifik for dit milj\u00f8
pscanbeta.insecurejsfviewstate.refs=https\://www.trustwave.com/spiderlabs/advisories/TWSL2010-001.txt
pscanbeta.insecurejsfviewstate.extrainfo=JSF ViewState [{0}] er usikker

pscanbeta.noanticsrftokens.name=Frav\u00e6r af Anti-CSRF Tokens
pscanbeta.noanticsrftokens.desc=Ingen Anti-CSRF Tokens blev fundet i HTML formularerne.
pscanbeta.noanticsrftokens.alert.attack=Ingen. Kun advarsler.
pscanbeta.noanticsrftokens.alert.extrainfo=Ingen kendte Anti-CSRF tokens {0} blev fundet i f\u00f8lgende HTML formularer\: {1}.  
