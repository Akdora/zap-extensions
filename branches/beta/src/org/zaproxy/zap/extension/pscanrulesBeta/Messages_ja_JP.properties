#X-Generator: crowdin.net
# This file defines the default (English) variants of all of the internationalised messages

pscanbeta.authenticationcredentialscaptured.name=Authentication Credentials captured
pscanbeta.authenticationcredentialscaptured.desc=An insecure authentication mechanism is in use.  This allows an attacker on the network access to the userid and password of the authenticated user. For Basic Authentication, the attacker must merely monitor the network traffic until a Basic Authentication request is received, and then base64 decode the username and password.  For Digest Authentication, the attacker has access to the username, and possibly also the password, if the hash (including a nonce) can be successfully cracked, or if a Man-In-The-Middle attack is mounted.     
pscanbeta.authenticationcredentialscaptured.soln=Use HTTPS, and use a secure authentication mechanism that does not transmit the userid or password in an un-encrypted fashion.  In particular, avoid use of the Basic Authentication mechanism, since this trivial obfuscation mechanism is easily broken. 
pscanbeta.authenticationcredentialscaptured.refs=https\://www.owasp.org/index.php/Top_10_2010-A3\nhttps\://www.owasp.org/index.php/Testing_for_Brute_Force_%28OWASP-AT-004%29\nhttps\://www.owasp.org/index.php/Category\:Authentication_Vulnerability\nhttp\://en.wikipedia.org/wiki/Digest_access_authentication
pscanbeta.authenticationcredentialscaptured.alert.basicauth.extrainfo=[{0}] [{1}] uses insecure authentication mechanism [{2}], revealing username [{3}] and password [{4}].
pscanbeta.authenticationcredentialscaptured.alert.digestauth.extrainfo=[{0}] [{1}] uses insecure authentication mechanism [{2}], revealing username [{3}] and additional information [{4}].
pscanbeta.authenticationcredentialscaptured.alert.attack=The attacker eavesdrops on the network until an authentication has completed.

pscanbeta.insecureauthentication.name=\u8106\u5f31\u306a\u8a8d\u8a3c\u65b9\u6cd5
pscanbeta.insecureauthentication.desc=HTTP basic or digest authentication has been used over an unsecured connection. The credentials can be read and then reused by someone with access to the network.
pscanbeta.insecureauthentication.soln=HTTPS \u3092\u4f7f\u7528\u3057\u3066\u63a5\u7d9a\u3092\u4fdd\u8b77\u3057\u305f\u308a\u3001\u5f37\u529b\u306a\u8a8d\u8a3c\u30e1\u30ab\u30cb\u30ba\u30e0\u3092\u4f7f\u7528\u3057\u307e\u3059\u3002
pscanbeta.insecureauthentication.refs=www.owasp.org/index.php/Category\:Authentication_Vulnerability

pscanbeta.insecurejsfviewstate.name=\u5b89\u5168\u3067\u306a\u3044JSF ViewState
pscanbeta.insecurejsfviewstate.desc=The response at the following URL contains a ViewState value that has no cryptographic protections.
pscanbeta.insecurejsfviewstate.soln=Secure VIEWSTATE with a MAC specific to your environment
pscanbeta.insecurejsfviewstate.refs=https\://www.trustwave.com/spiderlabs/advisories/TWSL2010-001.txt
pscanbeta.insecurejsfviewstate.extrainfo=JSF ViewState [{0}] is insecure

pscanbeta.noanticsrftokens.name=\u30a2\u30f3\u30c1-CSRF\u30c8\u30fc\u30af\u30f3\u304c\u4f7f\u7528\u3055\u308c\u3066\u3044\u306a\u3044
pscanbeta.noanticsrftokens.desc=HTML \u9001\u4fe1\u30d5\u30a9\u30fc\u30e0\u3067\u30a2\u30f3\u30c1CSRF\u30c8\u30fc\u30af\u30f3\u304c\u4f7f\u7528\u3055\u308c\u3066\u3044\u307e\u305b\u3093\u3067\u3057\u305f\u3002
pscanbeta.noanticsrftokens.alert.attack=None. Warning only.
pscanbeta.noanticsrftokens.alert.extrainfo=No known Anti-CSRF tokens {0} were found in the following HTML forms\: {1}.  
