# This file defines the default (English) variants of all of the internationalised messages
# Name of the Passive Scanner rule
charsetmismatch.name=Charset Mismatch
# Description
charsetmismatch.desc=This check identifies responses where the HTTP \
Content-Type header declares a charset different from the charset defined by \
the body of the HTML or XML. When there's a charset mismatch between the HTTP \
header and content body Web browsers can be forced into an undesirable \
content-sniffing mode to determine the content's correct character set.
# Solution
charsetmismatch.soln=Force UTF-8 for all text content in both the HTTP header \
and meta tags or encoding declarations in XML.
# Attack
charsetmismatch.exploit=An attacker could manipulate content on the page to be \
interpreted in an encoding of their choice. For example, if an attacker can \
control content at the beginning of the page, they could inject script using \
UTF-7 encoded text and manipulate some browsers into interpreting that text.
# References
charsetmismatch.refs=http://code.google.com/p/browsersec/wiki/Part2#Character_set_handling_and_detection
# Extra information for analysed XML content
charsetmismatch.extrainfo.html=There was a charset mismatch between the HTTP Header and \
the HTML encoding declaration: '{0}' and '{1}' do not match.\r\n\r\n"
# Extra information for analysed HTML content
charsetmismatch.extrainfo.xml=There was a charset mismatch between the HTTP Header and \
the XML encoding declaration: '{0}' and '{1}' do not match.\r\n\r\n"