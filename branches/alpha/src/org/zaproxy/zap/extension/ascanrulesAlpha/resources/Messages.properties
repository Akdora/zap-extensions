# ascanrulesAlpha 
#
# This file defines the default (English) variants of all of the internationalised messages
ascanalpha.desc = Active Scan Rules - alpha

ascanalpha.examplefile.name=An example active scan rule which loads data from a file
ascanalpha.examplefile.desc=Add more information about the vulnerability here
ascanalpha.examplefile.other=This is for information that doesnt fit in any of the other sections
ascanalpha.examplefile.soln=A general description of how to solve the problem
ascanalpha.examplefile.refs=http://zaproxy.blogspot.co.uk/2014/04/hacking-zap-4-active-scan-rules.html

ascanalpha.sourcecodedisclosure.desc = The source code for the current page was disclosed by the web server
ascanalpha.sourcecodedisclosure.lfibased.name = Source Code Disclosure - File Inclusion
ascanalpha.sourcecodedisclosure.lfibased.soln = Ensure that arbitrary files specified by the user are not included in the output
ascanalpha.sourcecodedisclosure.lfibased.extrainfo = The output for the source code filename [{0}] differs sufficiently from that of the random parameter [{1}], at [{2}%], compared to a threshold of [{3}%]
ascanalpha.sourcecodedisclosure.lfibased.evidence = 
ascanalpha.sourcecodedisclosure.svnbased.name = Source Code Disclosure - SVN
ascanalpha.sourcecodedisclosure.svnbased.soln = Ensure that SVN metadata files are not deployed to the web server or application server
ascanalpha.sourcecodedisclosure.svnbased.extrainfo = The source code for [{0}] was found at [{1}]
ascanalpha.sourcecodedisclosure.svnbased.evidence =
ascanalpha.sourcecodedisclosure.gitbased.name = Source Code Disclosure - Git 
ascanalpha.sourcecodedisclosure.gitbased.soln = Ensure that Git metadata files are not deployed to the web server or application server
ascanalpha.sourcecodedisclosure.gitbased.extrainfo =  
ascanalpha.sourcecodedisclosure.gitbased.evidence = The source code for [{0}] was extracted using [{1}]
ascanalpha.backupfiledisclosure.name = Backup File Disclosure
ascanalpha.backupfiledisclosure.desc = A backup of the file was disclosed by the web server
ascanalpha.backupfiledisclosure.soln = Do not edit files in-situ on the web server, and ensure that un-necessary files (including hidden files) are removed from the web server.
ascanalpha.backupfiledisclosure.evidence = A backup of [{0}] is available at [{1}]

ascanalpha.elinjection.name = Expression Language Injection
ascanalpha.elinjection.desc = The software constructs all or part of an expression language (EL) statement in a Java Server Page (JSP) using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended EL statement before it is executed. In certain versions of Spring 3.0.5 and earlier, there was a vulnerability (CVE-2011-2730) in which Expression Language tags would be evaluated twice, which effectively exposed any application to EL injection. However, even for later versions, this weakness is still possible depending on configuration.
ascanalpha.elinjection.soln = Perform data validation best practice against untrusted input and to ensure that output encoding is applied when data arrives on the EL layer, so that no metacharacter is found by the interpreter within the user content before evaluation. The most obvious patterns to detect include ${ and #{, but it may be possible to encode or fragment this data.
ascanalpha.elinjection.refs = https://www.owasp.org/index.php/Expression_Language_Injection\nhttp://cwe.mitre.org/data/definitions/917.html

ascanalpha.heartbleed.name=Heartbleed OpenSSL Vulnerability
ascanalpha.heartbleed.desc=The TLS implementation in OpenSSL 1.0.1 before 1.0.1g does not properly handle Heartbeat Extension packets, which allows remote attackers to obtain sensitive information from process memory via crafted packets that trigger a buffer over-read, potentially disclosing sensitive information.
ascanalpha.heartbleed.soln=Update to OpenSSL 1.0.1g or later. Re-issue HTTPS certificates. Change asymmetric private keys and shared secret keys, since these may have been compromised, with no evidence of compromise in the server log files.
ascanalpha.heartbleed.refs=http://cvedetails.com/cve-details.php?t=1&cve_id=CVE-2014-0160
ascanalpha.heartbleed.extrainfo=This issue was confirmed by exfiltrating data from the server, using {0}. This is unlikely to be a false positive. 

ascanalpha.soapactionspoofing.name=SOAP Action Spoofing
ascanalpha.soapactionspoofing.desc=An unintended SOAP operation was executed by the server.
ascanalpha.soapactionspoofing.other=An unintended SOAP operation was executed by the server.
ascanalpha.soapactionspoofing.soln=If not required, the SOAPAction attribute should be disabled. If needed, the operation within the SOAPAction and the SOAP body should always be compared before executing any operation. Any mismatch should be regarded as an attack.
ascanalpha.soapactionspoofing.refs=http://www.ws-attacks.org/index.php/SOAPAction_Spoofing