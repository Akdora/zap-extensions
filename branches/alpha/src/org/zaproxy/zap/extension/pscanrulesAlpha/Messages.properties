# This file defines the default (English) variants of all of the internationalised messages

pscanalpha.usercontrolledopenredirect.name=Open Redirect
pscanalpha.usercontrolledopenredirect.desc=Open redirects are one of the OWASP 2010 Top Ten vulnerabilities. This check looks at user-supplied input in query string parameters and POST data to identify where open redirects might be possible. Open redirects occur when an application allows user-supplied input (e.g. http://nottrusted.com) to control an offsite redirect. This is generally a pretty accurate way to find where 301 or 302 redirects could be exploited by spammers or phishing attacks
pscanalpha.usercontrolledopenredirect.soln=To avoid the open redirect vulnerability, parameters of the application script/program must be validated before sending 302 HTTP code (redirect) to the client browser. Implement safe redirect functionality that only redirects to relative URI's, or a list of trusted domains
pscanalpha.usercontrolledopenredirect.exploit=An attacker could supply a user with the following link: http://example.com/example.php?url=http://malicious.example.com
pscanalpha.usercontrolledopenredirect.refs=https://www.owasp.org/index.php/Open_redirect\nhttps://owasp.org/index.php/Top_10_2010-A10-Unvalidated_Redirects_and_Forwards\nhttps://cwe.mitre.org/data/definitions/601.html
pscanalpha.usercontrolledopenredirect.extrainfo.get=The 301 or 302 response to a request for the following URL appeared to contain user input in the location header:\r\n\r\n
pscanalpha.usercontrolledopenredirect.extrainfo.post=An open redirect controlled by POST parameters was detected. To test if this is a more serious issue, you should try resending that request as a GET, with the POST parameter included as a query string parameter. For example: http://nottrusted.com/page?url=http://lookout.net.\r\n\r\nThe 301 or 302 response to a request for the following URL appeared to contain user input in the location header:\r\n\r\n
pscanalpha.usercontrolledopenredirect.extrainfo.common={1}\r\n\r\nThe user input found was:\r\n\r\n{2}={3}\r\n\r\nThe context was:\r\n\r\n{4}	