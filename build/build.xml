<project name="ZAP-Extensions (Beta)" default="build-all" basedir=".">
	<description>Build ZAP extensions</description>

	<property name="src" location="../src" />
	<property name="src.version" value="1.7" />
	<property name="build" location="build" />
	<property name="build.lib.dir" location="lib" />
	<property name="temp" location="temp" />
	<property name="dist" location="zap-exts" />
	<property name="dist.lib.dir" location="../lib" />
	<property name="status" value="beta" />
	<property name="versions.file" location="${dist}/ZapVersions-${status}.xml" />
	<property name="wiki.dir" location="../../zap-extensions-wiki" />
	<property name="wiki.zaproxy.dir" location="../../zaproxy-wiki" />
	<!-- This assumes you also have the zaproxy project -->
	<property name="zap.plugin.dir" location="../../zaproxy/src/plugin" />
	<!-- This assumes you also have the zaproxy-2.4 project (used for the weekly release -->
	<property name="zap-2.4.plugin.dir" location="../../zaproxy-2.4/src/plugin" />

	<path id="build.classpath">
		   <fileset dir="${build.lib.dir}" includes="*.jar"/>
	</path>


	<!-- Ant task to generate the wiki -->
	<taskdef classpathref="build.classpath" resource="wikitasks.properties" />

	<!-- Ant task to generate JavaHelp search indexes -->
	<taskdef classpathref="build.classpath" resource="javahelptasks.properties" />

	<!-- Ant task to append ZapAddOn.xml files to ZapVersions.xml -->
	<taskdef classpathref="build.classpath" resource="zapversionstasks.properties"/>
	
	<target name="clean">
		<delete dir="${dist}" includeEmptyDirs="true" />
		<delete dir="${build}" includeEmptyDirs="true" />
		<delete dir="${temp}" includeEmptyDirs="true" />
	</target>

	<target name="init">
		<!-- Create the build directory structure used by compile -->
		<mkdir dir="${dist}" />
		<mkdir dir="${build}" />
		<mkdir dir="${temp}" />
	</target>

	<target name="compile" depends="init" description="compile the source">
		<echo message="Compiling the source..." />
		
		<!-- Compile with debug information if the property "javac.debug" is set to true -->
		<local name="debug" />
		<condition property="debug" value="true" else="false">
			<istrue value="${javac.debug}" />
		</condition>
		
		<!-- Compile the java code from ${src} into ${build} -->
		<javac srcdir="${src}" destdir="${build}" source="${src.version}" target="${src.version}" includeantruntime="false" debug="${debug}" encoding="UTF-8">
			<classpath>
				<fileset dir="${dist.lib.dir}">
					<include name="**/*.jar" />
					<include name="**/*.zap" />
				</fileset>
			</classpath>
		</javac>
	</target>

	<macrodef name="generate-wiki" description="Generates the wiki of an add-on into zap-extensions wiki dir">
		<attribute name="addOn"/>
		<sequential>
			<generate-wiki-impl addon="@{addOn}" basedestdir="${wiki.dir}"
				prefixlinkimages="https://zap-extensions.googlecode.com/svn/wiki/images/" tocpadding="0" />
		</sequential>
	</macrodef>

	<macrodef name="generate-wiki-core" description="Generates the wiki of an add-on into zaproxy wiki dir (normally for add-ons included in the main release)">
		<attribute name="addOn"/>
		<sequential>
			<generate-wiki-impl addon="@{addOn}" basedestdir="${wiki.zaproxy.dir}"
				prefixlinkimages="https://zaproxy.googlecode.com/svn/wiki/images/" tocpadding="2" />
		</sequential>
	</macrodef>

	<macrodef name="generate-wiki-impl">
		<attribute name="addOn"/>
		<attribute name="baseDestDir"/>
		<attribute name="prefixLinkImages"/>
		<attribute name="tocpadding"/>
		<sequential>
			<local name="addOnCapitalised" />
			<capitalise name="addOnCapitalised" value="@{addOn}" />

			<xmlproperty file="${src}/org/zaproxy/zap/extension/@{addOn}/ZapAddOn.xml"/>
			<local name="version"/>
			<property name="version" value="${zapaddon.version}" />

			<generatewiki basesrcdir="${src}/org/zaproxy/zap/extension/@{addOn}/resources" basedestdir="@{baseDestDir}"
				helpcontentsdir="contents/" helpcontentsinclude=".*\.html"
				srcimagesdir="contents/images/" destimagesdir="images" prefixlinkimages="@{prefixLinkImages}"
				outputfilenameprefix="HelpAddons${addOnCapitalised}" includeoutputfiles="HelpAddOns${addOnCapitalised}.*\.wiki"
				helpfileextension=".html" wikifileextension=".wiki"
				srctocfile="toc.xml" srcmapfile="map.jhm"
				wikitocfilename="TableOfContents-${addOnCapitalised}" wikitocentryinitpadding="@{tocpadding}"
				labels="UserGuide-${addOnCapitalised}-v${version}">

				<!-- Default language is at root of dest dir -->
				<helpdir src="help" dest="" />
				<!-- Do not generate for now.
				<helpdir src="help_bs_BA" dest="bs" />
				<helpdir src="help_de_DE" dest="de" />
				<helpdir src="help_el_GR" dest="el" />
				<helpdir src="help_es_ES" dest="es" />
				<helpdir src="help_fa_IR" dest="fa" />
				<helpdir src="help_fr_FR" dest="fr" />
				<helpdir src="help_it_IT" dest="it" />
				<helpdir src="help_ja_JP" dest="ja" />
				<helpdir src="help_pl_PL" dest="pl" />
				<helpdir src="help_pt_BR" dest="pt-BR" />
				<helpdir src="help_ru_RU" dest="ru" /> -->
			</generatewiki>
		</sequential>
	</macrodef>

	<macrodef name="build-addon" description="build the specified addon">
		<attribute name="name"/>
		<element name="extra-actions" implicit="true" optional="true" />
		<sequential>
			<local name="zapaddon.version" />
			<xmlproperty file="${src}/org/zaproxy/zap/extension/@{name}/ZapAddOn.xml"/>
			<local name="file" />
			<property name="file" value="@{name}-${status}-${zapaddon.version}.zap" />

			<generatejavahelpsearchindexes jhalljar="${dist.lib.dir}/jhall.jar"
				helpcontentsdirname="contents" helpsetfilename="helpset*.hs">
				<dirset dir="${src}/org/zaproxy/zap/extension/@{name}/resources/">
					<include name="help" />
					<include name="help_*_*" />
				</dirset>
			</generatejavahelpsearchindexes>

			<local name="addon.libs.zip" />
			<property name="addon.libs.zip" value="${temp}/libs-@{name}.zip" />

			<delete file="${addon.libs.zip}" failonerror="true" />
			<zip destfile="${addon.libs.zip}" whenempty="create">
				<zipgroupfileset dir="${src}/org/zaproxy/zap/extension/@{name}/lib/" includes="*.jar" erroronmissingdir="false" />
			</zip>

			<jar jarfile="${dist}/${file}" update="true" compress="true">
				<zipfileset dir="${build}" prefix="">
					<include name="org/zaproxy/zap/extension/@{name}/**"/>
				</zipfileset>
				<zipfileset dir="${src}" prefix="">
					<include name="org/zaproxy/zap/extension/@{name}/Messages*"/>
				</zipfileset>
				<zipfileset dir="${src}" prefix="">
					<include name="org/zaproxy/zap/extension/@{name}/resources/**"/>
				</zipfileset>
				<zipfileset src="${addon.libs.zip}">
					<exclude name="META-INF/*.DSA" />
					<exclude name="META-INF/*.SF" />
				</zipfileset>
				<zipfileset dir="${src}" includes="org/zaproxy/zap/extension/@{name}/ZapAddOn.xml" fullpath="ZapAddOn.xml"/>
			</jar>
			<delete file="${addon.libs.zip}" />

			<!-- Remove search indexes previously generated, no longer needed. -->
			<delete dir="${src}/org/zaproxy/zap/extension/@{name}/resources/help/JavaHelpSearch" />
			<delete dir="${src}/org/zaproxy/zap/extension/@{name}/resources/help_*_*/JavaHelpSearch" />

			<!-- Include add-on files -->
			<jar jarfile="${dist}/${file}" update="true" compress="true">
				<zipfileset dir="${src}/org/zaproxy/zap/extension/@{name}/files/" prefix="" erroronmissingdir="false" />
			</jar>

			<!-- allow callers to do extra actions before generating the hash and determine the size of the file -->
			<extra-actions />

			<local name="length" />
			<length file="${dist}/${file}" property="length" />

			<local name="sha1hash" />
			<checksum file="${dist}/${file}"  algorithm="SHA-1"  property="sha1hash"/>

			<local name="hash" />
			<property name="hash"  value="SHA1:${sha1hash}"/>

			<local name="yyyymmdd" />
			<tstamp>
				<format property="yyyymmdd" pattern="yyyy-MM-dd"/>
			</tstamp>

			<appendzapaddonfile from="${src}/org/zaproxy/zap/extension/@{name}/ZapAddOn.xml" to="${versions.file}"
				addonid="@{name}" filename="${file}" status="${status}" size="${length}" hash="${hash}" date="${yyyymmdd}"
				url="http://sourceforge.net/projects/zaproxy/files/add-ons/${file}/download" />

		</sequential>
	</macrodef>

	<macrodef name="build-help-addon" description="build the specified addon">
		<attribute name="name"/>
		<element name="extra-actions" implicit="true" optional="true" />
		<sequential>
			<local name="zapaddon.version" />
			<xmlproperty file="${src}/org/zaproxy/zap/extension/@{name}/ZapAddOn.xml" />
			<local name="file" />
			<property name="file" value="@{name}-${status}-${zapaddon.version}.zap" />

			<local name="addon.libs.zip" />
			<property name="addon.libs.zip" value="${temp}/libs-@{name}.zip" />

			<delete file="${addon.libs.zip}" failonerror="true" />
			<zip destfile="${addon.libs.zip}" whenempty="create">
				<zipgroupfileset dir="${src}/org/zaproxy/zap/extension/@{name}/lib/" includes="*.jar" />
			</zip>

			 <jar jarfile="${dist}/${file}" update="true" compress="true">
				<zipfileset src="${addon.libs.zip}" />
				<zipfileset dir="${src}" includes="org/zaproxy/zap/extension/@{name}/ZapAddOn.xml" fullpath="ZapAddOn.xml"/>
			</jar>
			<delete file="${addon.libs.zip}" />

			<!-- allow callers to do extra actions before generating the hash and determine the size of the file -->
			<extra-actions />

			<local name="length" />
			<length file="${dist}/${file}" property="length" />

			<local name="sha1hash" />
			<checksum file="${dist}/${file}"  algorithm="SHA-1" property="sha1hash"/>

			<local name="hash" />
			<property name="hash" value="SHA1:${sha1hash}"/>

			<local name="yyyymmdd" />
			<tstamp>
				<format property="yyyymmdd" pattern="yyyy-MM-dd"/>
			</tstamp>

			<appendzapaddonfile from="${src}/org/zaproxy/zap/extension/@{name}/ZapAddOn.xml" to="${versions.file}"
				addonid="@{name}" filename="${file}" status="${status}" size="${length}" hash="${hash}" date="${yyyymmdd}"
				url="http://sourceforge.net/projects/zaproxy/files/add-ons/${file}/download" />

		</sequential>
	</macrodef>
	
	<macrodef name="build-bruteforce-addon" description="Builds bruteforce add-on">
		<sequential>
			<build-addon name="bruteforce">
				<!-- Add the extra classes required -->
				<jar jarfile="${dist}/${file}" update="true" compress="true">
					<zipfileset dir="${build}" prefix="">
						<include name="com/sittinglittleduck/DirBuster/**"/>
					</zipfileset>
				</jar>
			</build-addon>
		</sequential>
	</macrodef>

	<macrodef name="build-tokengen-addon" description="Builds tokengen add-on">
		<sequential>
			<build-addon name="tokengen">
				<!-- Add the extra classes required -->
				<jar jarfile="${dist}/${file}" update="true" compress="true">
					<zipfileset dir="${build}" prefix="">
						<include name="com/fasteasytrade/JRandTest/**"/>
					</zipfileset>
				</jar>
			</build-addon>
		</sequential>
	</macrodef>

	<target name="build-all" depends="clean,compile" description="build all of the extensions">
		<delete file="${versions.file}"/>
		
		<!-- Keep in alphabetical order ;) -->
		<build-addon name="alertReport" />
		<build-addon name="ascanrulesBeta" />
		<build-addon name="beanshell" />
		<build-bruteforce-addon />
		<build-addon name="diff" />
		<build-addon name="importurls" />
		<build-addon name="invoke" />
		<build-addon name="jruby" />
		<build-addon name="jython" />
		<build-addon name="onlineMenu" />
		<build-addon name="plugnhack" />
		<build-addon name="portscan" />
		<build-addon name="pscanrulesBeta" />
		<build-addon name="scripts" />
		<build-addon name="sqliplugin" />
		<build-addon name="svndigger" />
		<build-addon name="tips" />
		<build-tokengen-addon />
		<build-addon name="treetools" />
		<build-addon name="zest" />

	</target>

	<macrodef name="deploy-addon" description="deploy the specified extension">
		<attribute name="name"/>
		<sequential>
			<copy todir="${zap.plugin.dir}">
				<fileset dir="${dist}">
				<include name="@{name}-*.zap"/>
				</fileset>
			</copy>
		</sequential>
	</macrodef>

	<macrodef name="build-deploy-addon" description="build and deploy the specified addon">
		<attribute name="name"/>
		<sequential>
			<antcall target="clean" />
			<antcall target="compile" />

			<build-addon name="@{name}" />
			<deploy-addon name="@{name}" />
		</sequential>
	</macrodef>

	<macrodef name="build-deploy-help-addon" description="build and deploy the specified help addon">
		<attribute name="name"/>
		<sequential>
			<antcall target="clean" />

			<build-help-addon name="@{name}" />
			<deploy-addon name="@{name}" />
		</sequential>
	</macrodef>

	<target name="deploy-alertReport" description="deploy the Alert Report ZAP extension">
		<build-deploy-addon name="alertReport" />
	</target>

	<target name="deploy-ascanrules" description="deploy the active scan rules">
		<build-deploy-addon name="ascanrulesBeta" />
	</target>

	<target name="generate-wiki-ascanrules" description="Generates the wiki of active scan rules">
		<generate-wiki addon="ascanrulesBeta" />
	</target>
	
	<target name="deploy-beanshell" description="deploy the beanshell">
		<build-deploy-addon name="beanshell" />
	</target>

	<target name="generate-wiki-beanshell" description="Generates the wiki of beanshell">
		<generate-wiki addon="beanshell" />
	</target>

	<target name="deploy-bruteforce" depends="clean,compile" description="deploy the bruteforce extension">
		<build-bruteforce-addon />
		<deploy-addon name="bruteforce" />
	</target>

	<target name="generate-wiki-bruteforce" description="Generates the wiki of bruteforce">
		<generate-wiki-core addon="bruteforce" />
	</target>
	
	<target name="deploy-diff" description="deploy the diff extension">
		<build-deploy-addon name="diff" />
	</target>

	<target name="generate-wiki-diff" description="Generates the wiki of diff">
		<generate-wiki-core addon="diff" />
	</target>

  	<target name="deploy-importurls" description="deploy the importurls extension">
		<build-deploy-addon name="importurls" />
	</target>

	<target name="deploy-invoke" description="deploy the invoke extension">
		<build-deploy-addon name="invoke" />
	</target>

	<target name="generate-wiki-invoke" description="Generates the wiki of invoke">
		<generate-wiki-core addon="invoke" />
	</target>

	<target name="deploy-jruby" description="deploy the jruby extension">
		<build-deploy-addon name="jruby" />
	</target>

	<target name="generate-wiki-jruby" description="Generates the wiki of jruby">
		<generate-wiki addon="jruby" />
	</target>

  	<target name="deploy-jython" description="deploy the jython extension">
		<build-deploy-addon name="jython" />
	</target>

	<target name="generate-wiki-jython" description="Generates the wiki of jython">
		<generate-wiki addon="jython" />
	</target>

  	<target name="deploy-onlineMenu" description="deploy the onlineMenu extension">
		<build-deploy-addon name="onlineMenu" />
	</target>

	<target name="generate-wiki-onlineMenu" description="Generates the wiki of onlineMenu">
		<generate-wiki-core addon="onlineMenu" />
	</target>
	
  	<target name="deploy-plugnhack" description="deploy the plug-n-hack extension">
		<build-deploy-addon name="plugnhack" />
	</target>

	<target name="generate-wiki-plugnhack" description="Generates the wiki of plugnhack">
		<generate-wiki-core addon="plugnhack" />
	</target>
	
	<target name="deploy-portscan" description="deploy the port scan extension">
		<build-deploy-addon name="portscan" />
	</target>

	<target name="generate-wiki-portscan" description="Generates the wiki of portscan">
		<generate-wiki addon="portscan" />
	</target>
	
	<target name="deploy-pscanrules" description="deploy the passive scan rules">
		<build-deploy-addon name="pscanrulesBeta" />
	</target>

	<target name="generate-wiki-pscanrules" description="Generates the wiki of pscanrules">
		<generate-wiki addon="pscanrulesBeta" />
	</target>
	
	<target name="deploy-scripts" description="deploy the scripts extension">
		<build-deploy-addon name="scripts" />
	</target>

	<target name="generate-wiki-scripts" description="Generates the wiki of scripts">
		<generate-wiki-core addon="scripts" />
	</target>

    <target name="deploy-tips" description="deploy the Tips and Tricks">
		<build-deploy-addon name="tips" />
	</target>
		
	<target name="generate-wiki-tips" description="Generates the wiki of tips">
		<generate-wiki addon="tips" />
	</target>

	<target name="deploy-tokengen" depends="clean,compile" description="deploy the tokengen extension">
		<build-tokengen-addon />
		<deploy-addon name="tokengen" />
	</target>

	<target name="deploy-zest" description="deploy the zest extension">
		<build-deploy-addon name="zest" />
	</target>

	 <target name="generate-wiki-zest" description="Generates the wiki of zest">
		<generate-wiki-core addon="zest" />
	</target>

	<target name="deploy-all" depends="build-all" description="deploy all of the extensions">
		<copy todir="${zap.plugin.dir}">
			<fileset dir="${dist}">
			<include name="*.zap"/>
			</fileset>
		</copy>
	</target>

	<target name="deploy-weekly" description="deploy extensions to be included in weekly releases">
		<!-- Set to compile with debug information -->
		<property name="javac.debug" value="true" />
		<antcall target="build-all" />
		<copy todir="${zap.plugin.dir}">
			<fileset dir="${dist}">
				<include name="ascanrulesBeta-${status}-*.zap"/>
				<include name="bruteforce-${status}-*.zap"/>
				<include name="diff-${status}-*.zap"/>
				<include name="invoke-${status}-*.zap"/>
				<include name="onlineMenu-${status}-*.zap"/>
				<include name="plugnhack-${status}-*.zap"/>
				<include name="portscan-${status}-*.zap"/>
				<include name="pscanrulesBeta-${status}-*.zap"/>
				<include name="scripts-${status}-*.zap"/>
				<include name="tips-${status}-*.zap"/>
				<include name="zest-${status}-*.zap"/>
			</fileset>
		</copy>
		<copy todir="${zap-2.4.plugin.dir}">
			<fileset dir="${dist}">
				<include name="ascanrulesBeta-${status}-*.zap"/>
				<include name="bruteforce-${status}-*.zap"/>
				<include name="diff-${status}-*.zap"/>
				<include name="invoke-${status}-*.zap"/>
				<include name="onlineMenu-${status}-*.zap"/>
				<include name="plugnhack-${status}-*.zap"/>
				<include name="portscan-${status}-*.zap"/>
				<include name="pscanrulesBeta-${status}-*.zap"/>
				<include name="scripts-${status}-*.zap"/>
				<include name="tips-${status}-*.zap"/>
				<include name="zest-${status}-*.zap"/>
			</fileset>
		</copy>
	</target>
	
	<target name="deploy-release" description="deploy extensions to be included in full releases">
		<!-- Set to compile with debug information -->
		<property name="javac.debug" value="true" />
		<antcall target="build-all" />
		<copy todir="${zap.plugin.dir}">
			<fileset dir="${dist}">
				<include name="bruteforce-${status}-*.zap"/>
				<include name="diff-${status}-*.zap"/>
				<include name="invoke-${status}-*.zap"/>
				<include name="onlineMenu-${status}-*.zap"/>
				<include name="plugnhack-${status}-*.zap"/>
				<include name="scripts-${status}-*.zap"/>
				<include name="tips-${status}-*.zap"/>
				<include name="zest-${status}-*.zap"/>
			</fileset>
		</copy>
	</target>

</project>